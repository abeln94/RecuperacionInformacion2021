<?xml version="1.0" encoding="UTF-8"?><oai_dc:dc xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.openarchives.org/OAI/2.0/oai_dc/ http://www.openarchives.org/OAI/2.0/oai_dc.xsd" xmlns:oai_dc="http://www.openarchives.org/OAI/2.0/oai_dc/">
    <dc:contributor>Rodríguez Fernández, Ricardo J.</dc:contributor>
    <dc:contributor>Perez Roche, Victor</dc:contributor>
    <dc:creator>Salueña Sediles, Asier</dc:creator>
    <dc:date>2018</dc:date>
    <dc:description>Durante el año 2017, el Centro Criptológico Nacional (CCN-CERT), un organismo adscrito al Centro Nacional de Inteligencia, gestionó un total de 26.472 incidentes. Este número de incidentes supuso un 27.22% más que en el año anterior. Las motivaciones de estos incidentes son frecuentemente ataques con el objetivo de la disrupción de sistemas, el ciberespionaje, la obtención de beneficios económicos, influenciación sobre la opinión pública o incluso la ciberguerra.  Este proyecto se enfoca en el desarrollo de un sistema que, mediante técnicas de aprendizaje automático, sea capaz de reconocer ataques a un sistema objetivo y los bloquee, minimizando el daño provocado en los mismos. Concretamente, los tipos de sistema que pretende defender son sistemas web. Para ello, el sistema monitoriza los logs generados por el sistema web bajo control tras recibir una petición web, apoyándose en una solución de almacenamiento y gestión de registros de sistemas que favorece la labor de parametrización de las peticiones a analizar (en concreto, mediante ELK). Por tanto, el sistema desarrollado en este proyecto consta de tres sub-sistemas. El primer sistema se encarga de monitorizar el directorio donde se almacenan los logs del sistema a proteger. El segundo sistema analiza las peticiones recibidas y las evalúa mediante dos elementos: un clasificador automático y un sistema de reglas. El sistema de reglas usa los resultados del clasificador en conjunto con unas reglas pre-establecidas para determinar si la petición analizada es un ataque o no. Por último, el sistema de actuación valora la detección realizada por el sistema de análisis y aplica las medidas correctivas necesarias.  Como caso de estudio, se usa la plataforma Moodle para comprobar el funcionamiento del sistema desarrollado y valorar la efectividad de las defensas generadas. La plataforma Moodle es la herramienta más utilizada en el ámbito educativo como herramienta de apoyo docente, tanto en la Universidad de Zaragoza como en otras universidades.</dc:description>
    <dc:identifier>http://zaguan.unizar.es/record/76366</dc:identifier>
    <dc:language>spa</dc:language>
    <dc:publisher>Universidad de Zaragoza; Departamento de Informática e Ingeniería de Sistemas; Área de Lenguajes y Sistemas Informáticos</dc:publisher>
    <dc:relation>http://zaguan.unizar.es/record/76366/files/TAZ-TFG-2018-4622.pdf</dc:relation>
    <dc:rights>http://creativecommons.org/licenses/by-nc-sa/3.0/</dc:rights>
    <dc:subject>Graduado en Ingeniería Informática</dc:subject>
    <dc:title>Generación automática de reglas de seguridad en base a registros de sistema</dc:title>
    <dc:type>TAZ-TFG</dc:type>
    <dc:title xml:lang="en">Automatic generation of security rules based on system logs</dc:title>
</oai_dc:dc>
