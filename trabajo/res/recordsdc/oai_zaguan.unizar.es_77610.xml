<?xml version="1.0" encoding="UTF-8"?><oai_dc:dc xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.openarchives.org/OAI/2.0/oai_dc/ http://www.openarchives.org/OAI/2.0/oai_dc.xsd" xmlns:oai_dc="http://www.openarchives.org/OAI/2.0/oai_dc/">
    <dc:contributor>Tardós Solano, Juan Domingo</dc:contributor>
    <dc:creator>Luesia Lahoz, Pablo</dc:creator>
    <dc:date>2018</dc:date>
    <dc:description>ORB-SLAM2 es una librería software desarrollada por el grupo de robótica y tiempo real de la Universidad de Zaragoza que permite calcular en tiempo real la trayectoria seguida por un agente (un robot, un vehículo autónomo, un dron, etc.), mientras construye un mapa del entorno, a partir de las imágenes obtenidas por una cámara embarcada en el agente. El objetivo de este trabajo es optimizar la librería en uso de memoria y tiempo de ejecución, y extenderla con funciones de almacenamiento de mapas. Se ha realizado un análisis de la ocupación en memoria y se ha comprobado que aumenta a medida que la cámara explora el entorno y el mapa va creciendo. Sin embargo, también se ha observado que, aunque el algoritmo elimine elementos del mapa por considerarlos redundantes, la ocupación en memoria no disminuye. Se ha implementado el uso de punteros inteligentes para los elementos del mapa, sin que la situación mejore. La conclusión es que hay una elevada fragmentación de la memoria, y aunque los datos desechados se eliminen correctamente, el sistema no es capaz de reutilizar la memoria liberada. Sería necesario un rediseño completo de las estructuras de datos del mapa, que queda fuera del alcance de este trabajo.  Para el reconocimiento de lugares ORB-SLAM2 utiliza un método de bolsa de palabras, en el que los puntos de interés de cada imagen se pasan por un árbol de vocabulario para convertirlos en palabras visuales. Para optimizar esta parte, se ha implementado el árbol mediante una estructura de datos implícita, asegurando su contigüidad en memoria. Con ello se ha disminuido drásticamente el tiempo de carga del vocabulario desde disco, su ocupación en memoria, y el tiempo de recorrido del árbol, gracias, en parte, al mejor aprovechamiento de la caché del procesador. La librería se ha extendido con funciones de almacenar mapas en disco y cargarlos en otra ejecución, utilizando para ello la librería Boost. Con este cambio se permite compartir mapas entre distintas ejecuciones o incluso entre distintos sistemas. Esta extensión abre nuevas vías de trabajo futuro sobre esta librería, como mapeo de entornos multi-sesión o con varios agentes en paralelo. Como baterías de prueba para comprobar el correcto funcionamiento del sistema, así como para calcular las prestaciones obtenidas, se han utilizado las secuencias de imágenes KITTI y EUROC, proporcionadas por la comunidad robótica.</dc:description>
    <dc:identifier>http://zaguan.unizar.es/record/77610</dc:identifier>
    <dc:language>spa</dc:language>
    <dc:publisher>Universidad de Zaragoza; Departamento de Informática e Ingeniería de Sistemas; Área de Ingeniería de Sistemas y Automática</dc:publisher>
    <dc:relation>http://zaguan.unizar.es/record/77610/files/TAZ-TFG-2018-2876.pdf</dc:relation>
    <dc:rights>http://creativecommons.org/licenses/by-nc-sa/3.0/</dc:rights>
    <dc:subject>Graduado en Ingeniería Informática</dc:subject>
    <dc:title>Optimización de memoria y tiempo de ejecución de ORB-SLAM2</dc:title>
    <dc:type>TAZ-TFG</dc:type>
    <dc:title xml:lang="en">Memory and running time optimization of ORB-SLAM2</dc:title>
</oai_dc:dc>
